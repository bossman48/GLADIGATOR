# -*- coding: utf-8 -*-
"""Gather-Disease-Data-From-UMLS.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1j3dr5jOXz5cpmuJ-W_bSNSiZqEJrCmcU

Read diseases_association.tsv file
"""
import config
import csv
fileDiseases=open("../../source-files/disease_associations.tsv")
tsv_file_reader = csv.reader(fileDiseases, delimiter="\t")
rowsDiseases = []
for row in tsv_file_reader:
  rowsDiseases.append(row)

print(rowsDiseases[0])
header = rowsDiseases[0]
header.append("description")
print(header)
print(rowsDiseases[1])
print(rowsDiseases[2])
print(rowsDiseases[2][0])
print(len(rowsDiseases))

"""# Gather disease data from UMLS
# You should gather your apikey that receive data from UMLS that mentioned in below
# https://documentation.uts.nlm.nih.gov/rest/search/
"""

# TODO:
apikey = config.config.get("apikey")

"""
  real application
"""


def isUTFCeckCompleted(tempString):
  valid_utf8 = True
  try:
      tempString.encode(encoding='utf-8').decode('ascii')
  except UnicodeDecodeError:
      valid_utf8 = False

  return valid_utf8

print("tempString: isUTFCeckCompleted : ", isUTFCeckCompleted("tempString"))
print("François: isUTFCeckCompleted : ", isUTFCeckCompleted("François"))
# importing the requests library
import requests


def getDiseaseDescription(uniprotid:str):
  try:
    # api-endpoint
    listData=[]
    URL = "https://uts-ws.nlm.nih.gov/rest/content/current/CUI/"+uniprotid+"/definitions?apiKey="+apikey
    # sending get request and saving the response as response object
    r = requests.get(url = URL)
    # extracting data in json format
    data = r.json()
    sources = ["DO", "EFO", "HPO", "ICD9CM", "ICD10", "ICD10CM", "MSH", "NCI", "CCC","NANDA-I","PNDS","ICF","OMIM", "ORDO","MONDO","CSP","ORPHANET","AIR","CHV","GO","PSY","SNOMEDCT_US","JABL","LNC","UWDA"]
    tempData = ""
    try:
      for element in data["result"]:
        if element["rootSource"] in sources:
          tempString = element["value"]
          if(isUTFCeckCompleted(tempString)):
            tempData+=element["value"]+" "
        
      return tempData

    except:
      return tempData
  except Exception as exc:
    print(exc)
    return ""

print("C0001432 descripton is :" , getDiseaseDescription("C0001432"))

index=1
print("Disease descriptions will be gathered")
while(index<len(rowsDiseases)):
  try:
    rowsDiseases[index].append(getDiseaseDescription(rowsDiseases[index][0]))
    if( index%100 == 0 ):
      print("Please wait, index :",index," diseaseId : ", rowsDiseases[index][0])
    index+=1
  except Exception as exc:
    print(exc)

print("Disease descriptions has been gathered")

try:
  rowsDiseases[0].append("Description")
  #save gene features
  with open('../../source-files/diseaseFeaturesWithDescription.csv', mode='w', encoding='utf-8') as csv_file:
      writer = csv.writer(csv_file)
      #writer.writerow(header)
      index = 0
      while(index<len(rowsDiseases)):
        try:
          writer.writerow(rowsDiseases[index])
        except Exception as exc:
          print(exc)
        index+=1
except Exception as exc:
  print(exc)
print("Disease descriptions file has been saved. name: diseaseFeaturesWithDescription.csv")
